#!/bin/bash

###################################################
#                                                 # -=The main DEB-Build loop=-             # #
###################################################

# Global environment varible set
BUILD_SCRIPT_NAME="$0"

SHARED_BASE="/data"
GOLANG_VER="$(grep -e "^go\s" go.mod | awk '{print $2}')"
#BRANCH=$(git rev-parse --abbrev-ref HEAD)
#NFPM_VER="v2.26.0"
#AUTH_KEY="ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMtZz9Q09I41faeyLIWEijSCFSp8bAbvX2dHUhKxGmJ7nPmqGhXDtDCDF3D1RiNMMQGMzrIaDZWq8WIy98eq2zI= root@vg-wolfs-mgmt"


function doCompile {
  set -e
  CMD_DIR="cmd"
  
  # Build environment set
  
  export CGO_ENABLED=0
  
  # Git connection set
  ssh-keyscan -t rsa github.com >> /etc/ssh/ssh_known_hosts
  git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
  
  # Setup Go Env
  go env -w GOPRIVATE=github.com/vpngen

  MAINGO_LIST=$(find "$CMD_DIR/" -type f -name "main.go")
  for mainGo in $MAINGO_LIST; do
    progURI=$(dirname "$mainGo")
    compileURI="github.com/realm-admin/$progURI"
    echo "$compileURI"
  done
} 

function runCompileDocer {

  docker run --rm \
    -v "$(readlink -f "$SSH_AUTH_SOCK")":/ssh-agent \
    -e SSH_AUTH_SOCK=/ssh-agent \
    -e USER_UID="$(id -u)" \
    -e BRANCH="${BRANCH}" \
    -v "${PWD}":"${SHARED_BASE}" \
    -w "${SHARED_BASE}" 
    golang:"$GOLANG_VER" "${BUILD_SCRIPT_NAME}" debug
}

#function doBuild {
#docker run --rm \
#    -v "$PWD":/tmp \
#      -w /tmp goreleaser/nfpm:$NFPM_VER package \
#        --config "${SHARED_BASE}/nfpm.yaml" \
#          --target "${SHARED_BASE}/pkg" \
#            --packager deb
#}

# Main entry point
case $1 in 
  "runDocker")
    runCompileDocer
    
    exit 0
    ;; 

  "compile")
    doCompile
   
    exit 0
    ;;

  "build")
    
    exit 0
    ;;
  
  "debug")
    echo "PWD: $PWD"
    echo "USER_UID: $USER_UID"
    echo "SSH_AUTH_SOCK: $SSH_AUTH_SOCK"
    echo "BUILD_SCRIPT_NAME: $BUILD_SCRIPT_NAME"
    echo "SHARED_BASE: $SHARED_BASE"
    echo "GOLANG_VER: $GOLANG_VER"

    exit 0
    ;;
 
  *)
    echo " [+] Starting compiling procedure..."
    $BUILD_SCRIPT_NAME runDocker

    exit 0
esac

